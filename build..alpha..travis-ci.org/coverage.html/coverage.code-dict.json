{"/home/travis/build/npmtest/node-npmtest-react-file-uploader/test.js":"/* istanbul instrument in package npmtest_react_file_uploader */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-file-uploader/lib.npmtest_react_file_uploader.js":"/* istanbul instrument in package npmtest_react_file_uploader */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_file_uploader = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_file_uploader = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-file-uploader/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-file-uploader && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_file_uploader */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_file_uploader\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_file_uploader.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_file_uploader.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_file_uploader.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_file_uploader.__dirname + '/lib.npmtest_react_file_uploader.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-file-uploader/node_modules/react-file-uploader/lib/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.status = exports.UploadHandler = exports.UploadManager = exports.Receiver = undefined;\n\nvar _Receiver = require('./Receiver');\n\nvar _Receiver2 = _interopRequireDefault(_Receiver);\n\nvar _UploadManager = require('./UploadManager');\n\nvar _UploadManager2 = _interopRequireDefault(_UploadManager);\n\nvar _UploadHandler = require('./UploadHandler');\n\nvar _UploadHandler2 = _interopRequireDefault(_UploadHandler);\n\nvar _status = require('./constants/status');\n\nvar _status2 = _interopRequireDefault(_status);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Receiver = _Receiver2.default;\nexports.UploadManager = _UploadManager2.default;\nexports.UploadHandler = _UploadHandler2.default;\nexports.status = _status2.default;","/home/travis/build/npmtest/node-npmtest-react-file-uploader/node_modules/react-file-uploader/lib/Receiver.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _shortid = require('shortid');\n\nvar _shortid2 = _interopRequireDefault(_shortid);\n\nvar _status = require('./constants/status');\n\nvar _status2 = _interopRequireDefault(_status);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Receiver = function (_Component) {\n  _inherits(Receiver, _Component);\n\n  function Receiver(props) {\n    _classCallCheck(this, Receiver);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Receiver).call(this, props));\n\n    _this.onDragEnter = _this.onDragEnter.bind(_this);\n    _this.onDragOver = _this.onDragOver.bind(_this);\n    _this.onDragLeave = _this.onDragLeave.bind(_this);\n    _this.onFileDrop = _this.onFileDrop.bind(_this);\n\n    // this is to monitor the hierarchy\n    // for window onDragEnter event\n    _this.state = {\n      dragLevel: 0\n    };\n    return _this;\n  }\n\n  _createClass(Receiver, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      (0, _invariant2.default)(!!window.DragEvent && !!window.DataTransfer, 'Upload end point must be provided to upload files');\n\n      window.addEventListener('dragenter', this.onDragEnter);\n      window.addEventListener('dragleave', this.onDragLeave);\n      window.addEventListener('dragover', this.onDragOver);\n      window.addEventListener('drop', this.onFileDrop);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragenter', this.onDragEnter);\n      window.removeEventListener('dragleave', this.onDragLeave);\n      window.removeEventListener('dragover', this.onDragOver);\n      window.removeEventListener('drop', this.onFileDrop);\n    }\n  }, {\n    key: 'onDragEnter',\n    value: function onDragEnter(e) {\n      var dragLevel = this.state.dragLevel + 1;\n\n      this.setState({ dragLevel: dragLevel });\n\n      if (!this.props.isOpen) {\n        this.props.onDragEnter(e);\n      }\n    }\n  }, {\n    key: 'onDragLeave',\n    value: function onDragLeave(e) {\n      var dragLevel = this.state.dragLevel - 1;\n\n      this.setState({ dragLevel: dragLevel });\n\n      if (dragLevel === 0) {\n        this.props.onDragLeave(e);\n      }\n    }\n  }, {\n    key: 'onDragOver',\n    value: function onDragOver(e) {\n      e.preventDefault();\n      this.props.onDragOver(e);\n    }\n  }, {\n    key: 'onFileDrop',\n    value: function onFileDrop(e) {\n      // eslint-disable-next-line no-param-reassign\n      e = e || window.event;\n      e.preventDefault();\n\n      var files = [];\n\n      if (!!e.dataTransfer) {\n        var fileList = e.dataTransfer.files || [];\n\n        for (var i = 0; i < fileList.length; i++) {\n          fileList[i].id = _shortid2.default.generate();\n          fileList[i].status = _status2.default.PENDING;\n          fileList[i].progress = 0;\n          fileList[i].src = null;\n          files.push(fileList[i]);\n        }\n      }\n\n      // reset drag level once dropped\n      this.setState({ dragLevel: 0 });\n\n      this.props.onFileDrop(e, files);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props;\n      var isOpen = _props.isOpen;\n      var customClass = _props.customClass;\n      var style = _props.style;\n      var children = _props.children;\n\n\n      return isOpen ? _react2.default.createElement(\n        'div',\n        { className: (0, _classnames2.default)(customClass), style: style },\n        children\n      ) : null;\n    }\n  }]);\n\n  return Receiver;\n}(_react.Component);\n\nReceiver.propTypes = {\n  children: _react.PropTypes.oneOfType([_react.PropTypes.element, _react.PropTypes.arrayOf(_react.PropTypes.element)]),\n  customClass: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),\n  isOpen: _react.PropTypes.bool.isRequired,\n  onDragEnter: _react.PropTypes.func.isRequired,\n  onDragOver: _react.PropTypes.func,\n  onDragLeave: _react.PropTypes.func.isRequired,\n  onFileDrop: _react.PropTypes.func.isRequired,\n  style: _react.PropTypes.object\n};\n\nexports.default = Receiver;","/home/travis/build/npmtest/node-npmtest-react-file-uploader/node_modules/react-file-uploader/lib/constants/status.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  FAILED: -1,\n  PENDING: 0,\n  UPLOADING: 1,\n  UPLOADED: 2\n};","/home/travis/build/npmtest/node-npmtest-react-file-uploader/node_modules/react-file-uploader/lib/UploadManager.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _assign = require('lodash/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _bindKey = require('lodash/bindKey');\n\nvar _bindKey2 = _interopRequireDefault(_bindKey);\n\nvar _clone = require('lodash/clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _superagent = require('superagent');\n\nvar _superagent2 = _interopRequireDefault(_superagent);\n\nvar _status = require('./constants/status');\n\nvar _status2 = _interopRequireDefault(_status);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar debug = require('debug')('react-file-upload:UploadManager');\n\nvar UploadManager = function (_Component) {\n  _inherits(UploadManager, _Component);\n\n  function UploadManager(props) {\n    _classCallCheck(this, UploadManager);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(UploadManager).call(this, props));\n\n    _this.upload = _this.upload.bind(_this);\n    return _this;\n  }\n\n  _createClass(UploadManager, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      (0, _invariant2.default)(!!this.props.uploadUrl, 'Upload end point must be provided to upload files');\n\n      (0, _invariant2.default)(!!this.props.onUploadEnd, 'onUploadEnd function must be provided');\n    }\n  }, {\n    key: 'upload',\n    value: function upload(url, file) {\n      var _props = this.props;\n      var onUploadStart = _props.onUploadStart;\n      var onUploadEnd = _props.onUploadEnd;\n      var onUploadProgress = _props.onUploadProgress;\n      var uploadErrorHandler = _props.uploadErrorHandler;\n      var _props$uploadHeader = _props.uploadHeader;\n      var uploadHeader = _props$uploadHeader === undefined ? {} : _props$uploadHeader;\n\n\n      if (typeof onUploadStart === 'function') {\n        onUploadStart((0, _assign2.default)(file, { status: _status2.default.UPLOADING }));\n      }\n\n      var formData = new FormData();\n      formData.append('file', file);\n\n      debug('start uploading file#' + file.id + ' to ' + url, file);\n\n      _superagent2.default.post(url).accept('application/json').set(uploadHeader).send(formData).on('progress', function (_ref) {\n        var percent = _ref.percent;\n\n        if (typeof onUploadProgress === 'function') {\n          onUploadProgress((0, _assign2.default)(file, {\n            progress: percent,\n            status: _status2.default.UPLOADING\n          }));\n        }\n      }).end(function (err, res) {\n        var _uploadErrorHandler = uploadErrorHandler(err, res);\n\n        var error = _uploadErrorHandler.error;\n        var result = _uploadErrorHandler.result;\n\n\n        if (error) {\n          debug('failed to upload file', error);\n\n          if (typeof onUploadEnd === 'function') {\n            onUploadEnd((0, _assign2.default)(file, { error: error, status: _status2.default.FAILED }));\n          }\n\n          return;\n        }\n\n        debug('succeeded to upload file', res);\n\n        if (typeof onUploadEnd === 'function') {\n          onUploadEnd((0, _assign2.default)(file, { result: result, status: _status2.default.UPLOADED }));\n        }\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props2 = this.props;\n      var component = _props2.component;\n      var customClass = _props2.customClass;\n      var style = _props2.style;\n      var children = _props2.children;\n      var uploadUrl = _props2.uploadUrl;\n\n\n      return _react2.default.createElement(component, { className: (0, _classnames2.default)(customClass), style: style }, _react2.default.Children.map(children, function (child) {\n        return (0, _react.cloneElement)(child, (0, _assign2.default)({\n          upload: (0, _bindKey2.default)(_this2, 'upload', uploadUrl, child.props.file)\n        }, child.props));\n      }));\n    }\n  }]);\n\n  return UploadManager;\n}(_react.Component);\n\nUploadManager.propTypes = {\n  children: _react.PropTypes.oneOfType([_react.PropTypes.element, _react.PropTypes.arrayOf(_react.PropTypes.element)]),\n  component: _react.PropTypes.string.isRequired,\n  customClass: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),\n  onUploadStart: _react.PropTypes.func,\n  onUploadProgress: _react.PropTypes.func,\n  onUploadEnd: _react.PropTypes.func.isRequired,\n  style: _react.PropTypes.object,\n  uploadErrorHandler: _react.PropTypes.func.isRequired,\n  uploadUrl: _react.PropTypes.string.isRequired,\n  uploadHeader: _react.PropTypes.object\n};\n\nUploadManager.defaultProps = {\n  component: 'ul',\n  uploadErrorHandler: function uploadErrorHandler(err, res) {\n    var error = null;\n    var body = (0, _clone2.default)(res.body);\n\n    if (err) {\n      error = err.message;\n    } else if (body && body.errors) {\n      error = body.errors;\n    }\n\n    delete body.errors;\n\n    return { error: error, result: body };\n  }\n};\n\nexports.default = UploadManager;","/home/travis/build/npmtest/node-npmtest-react-file-uploader/node_modules/react-file-uploader/lib/UploadHandler.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _status = require('./constants/status');\n\nvar _status2 = _interopRequireDefault(_status);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar debug = require('debug')('react-file-upload:UploadHandler');\n\nvar UploadHandler = function (_Component) {\n  _inherits(UploadHandler, _Component);\n\n  function UploadHandler() {\n    _classCallCheck(this, UploadHandler);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(UploadHandler).apply(this, arguments));\n  }\n\n  _createClass(UploadHandler, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props;\n      var file = _props.file;\n      var upload = _props.upload;\n      var autoStart = _props.autoStart;\n\n\n      if (file.status === _status2.default.PENDING && autoStart) {\n        debug('autoStart in on, calling upload()');\n        upload(file);\n      }\n    }\n  }, {\n    key: 'getStatusString',\n    value: function getStatusString(status) {\n      switch (status) {\n        case -1:\n          return 'failed';\n\n        case 0:\n          return 'pending';\n\n        case 1:\n          return 'uploading';\n\n        case 2:\n          return 'uploaded';\n\n        default:\n          return '';\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props;\n      var component = _props2.component;\n      var key = _props2.key;\n      var customClass = _props2.customClass;\n      var style = _props2.style;\n\n\n      return _react2.default.createElement(component, { key: key, className: (0, _classnames2.default)(customClass), style: style }, this.props.children);\n    }\n  }]);\n\n  return UploadHandler;\n}(_react.Component);\n\nUploadHandler.propTypes = {\n  autoStart: _react.PropTypes.bool,\n  children: _react.PropTypes.oneOfType([_react.PropTypes.element, _react.PropTypes.arrayOf(_react.PropTypes.element)]),\n  component: _react.PropTypes.string.isRequired,\n  customClass: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),\n  file: _react.PropTypes.object.isRequired,\n  key: _react.PropTypes.string,\n  style: _react.PropTypes.object,\n  upload: _react.PropTypes.func\n};\n\nUploadHandler.defaultProps = {\n  component: 'li'\n};\n\nexports.default = UploadHandler;","/home/travis/build/npmtest/node-npmtest-react-file-uploader/node_modules/react-file-uploader/index.js":"'use strict';\n\nmodule.exports = require('./lib/FileUploader');","/home/travis/build/npmtest/node-npmtest-react-file-uploader/node_modules/react-file-uploader/src/index.js":"import Receiver from './Receiver';\nimport UploadManager from './UploadManager';\nimport UploadHandler from './UploadHandler';\nimport status from './constants/status';\n\nexport {\n  Receiver,\n  UploadManager,\n  UploadHandler,\n  status,\n};\n\n"}